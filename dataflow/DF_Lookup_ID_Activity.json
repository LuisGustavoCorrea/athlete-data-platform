{
	"name": "DF_Lookup_ID_Activity",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_JSON_Le_IDs",
						"type": "DatasetReference"
					},
					"name": "source1",
					"description": "Read JSON Strava activitis of the day"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "filter1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          achievement_count as short,",
				"          athlete as (id as integer, resource_state as boolean),",
				"          athlete_count as short,",
				"          average_cadence as double,",
				"          average_speed as double,",
				"          comment_count as boolean,",
				"          commute as boolean,",
				"          display_hide_heartrate_option as boolean,",
				"          distance as double,",
				"          elapsed_time as short,",
				"          elev_high as double,",
				"          elev_low as double,",
				"          end_latlng as double[],",
				"          external_id as string,",
				"          flagged as boolean,",
				"          from_accepted_tag as boolean,",
				"          gear_id as string,",
				"          has_heartrate as boolean,",
				"          has_kudoed as boolean,",
				"          heartrate_opt_out as boolean,",
				"          id as long,",
				"          kudos_count as short,",
				"          location_city as string,",
				"          location_country as string,",
				"          location_state as string,",
				"          manual as boolean,",
				"          map as (id as string, resource_state as short, summary_polyline as string),",
				"          max_speed as double,",
				"          moving_time as short,",
				"          name as string,",
				"          photo_count as boolean,",
				"          pr_count as short,",
				"          private as boolean,",
				"          resource_state as short,",
				"          sport_type as string,",
				"          start_date as timestamp,",
				"          start_date_local as timestamp,",
				"          start_latlng as double[],",
				"          timezone as string,",
				"          total_elevation_gain as double,",
				"          total_photo_count as boolean,",
				"          trainer as boolean,",
				"          type as string,",
				"          upload_id as long,",
				"          upload_id_str as long,",
				"          utc_offset as double,",
				"          visibility as string,",
				"          workout_type as boolean",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> source1",
				"source1 select(mapColumn(",
				"          id_activity = id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 aggregate(groupBy(id_activity),",
				"     each(match(name!='id_activity'), $$ = first($$))) ~> aggregate1",
				"aggregate1 filter(!isNull(id_activity)) ~> filter1",
				"filter1 sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: true,",
				"     saveOrder: 1) ~> sink1"
			]
		}
	}
}