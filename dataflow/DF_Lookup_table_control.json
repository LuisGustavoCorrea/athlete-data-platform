{
	"name": "DF_Lookup_table_control",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "csv_control",
						"type": "DatasetReference"
					},
					"name": "tableControl"
				},
				{
					"dataset": {
						"referenceName": "athelteJson",
						"type": "DatasetReference"
					},
					"name": "ingestJson"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "selectAthleteIdJson"
				},
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          athlete_id as integer,",
				"          start_date as date,",
				"          ingestion_timestamp as string,",
				"          full_carga as boolean,",
				"          start_date_unix as integer,",
				"          ingestion_timestamp_unix as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> tableControl",
				"source(output(",
				"          id as integer,",
				"          username as string,",
				"          resource_state as integer,",
				"          firstname as string,",
				"          lastname as string,",
				"          bio as string,",
				"          city as string,",
				"          state as string,",
				"          country as string,",
				"          sex as string,",
				"          premium as boolean,",
				"          summit as boolean,",
				"          created_at as string,",
				"          updated_at as string,",
				"          badge_type_id as integer,",
				"          weight as double,",
				"          profile_medium as string,",
				"          profile as string,",
				"          friend as string,",
				"          follower as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> ingestJson",
				"ingestJson select(mapColumn(",
				"          athlete_id_json = id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectAthleteIdJson",
				"tableControl, selectAthleteIdJson join(athlete_id == athlete_id_json,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: true,",
				"     saveOrder: 1) ~> sink1"
			]
		}
	}
}